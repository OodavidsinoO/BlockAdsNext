name: BlockAds

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Build Hosts File"]
    types:
      - completed

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      # - name: Create Temp Folder
      #   run: mkdir downloads

      - name: Start Building
        run: |
          cd src
          # ==========================
          # Get latest version of BlockAdsNext
          fileVersion=$(curl -s "https://api.github.com/repos/OodavidsinoO/BlockAdsNext/tags" | jq -r '.[0].name')
          echo $fileVersion
          fileName="BlockAdsNext-$fileVersion.zip"
          echo $fileName
          ls -alh
          pwd
          fileURL="https://github.com/OodavidsinoO/BlockAdsNext/releases/download/$fileVersion/$fileName"
          curl -s -L "https://raw.githubusercontent.com/OodavidsinoO/BlockAdsNext/refs/heads/main/hosts" > ./system/etc/hosts
          # ==========================
          # Change version number
          currentVersion=$fileVersion
          # Extract the major and minor version components
          major=$(echo "$currentVersion" | awk -F'.' '{print substr($1,2)}')
          minor=$(echo "$currentVersion" | awk -F'.' '{print $2}')
          # Increment the minor version, and reset to 0 if it reaches 99
          minor=$((minor + 1))
          if [ "$minor" -eq 100 ]; then
            minor=0
            major=$((major + 1))
          fi
          # ==========================
          # Format the new version
          newVersion="v${major}.${minor}"
          echo "id=BlockADsNext
          name=BlockADsNext
          version=$newVersion
          versionCode=$(date +"%Y%m%d")
          author=OodavidsinoO
          description=🔥️ Say Goodbye To Ads Forever ($(date +"%Y%m%d"))
          updateJson=https://raw.githubusercontent.com/OodavidsinoO/BlockAdsNext/refs/heads/main/blockadsnext-update.json" > module.prop
          zip -r BlockAdsNext-$newVersion.zip *
          mkdir temp
          mv BlockAdsNext-$newVersion.zip temp
          cd ..
          echo "Build Done"
          echo newVersion=${newVersion} >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.newVersion }}
          release_name: BlockAdsNext Module
          body: |
            # Changelog
            - Updated Hosts File
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./downloads/ZIP/temp/BlockAdsNext-${{ env.newVersion }}.zip
          asset_name: BlockAdsNext-${{ env.newVersion }}.zip
          asset_content_type: application/zip
